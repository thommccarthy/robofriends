{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","name","email","id","className","alt","height","width","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","children","ErrorBoundary","state","hasError","error","info","this","setState","hasErro","Component","App","onSearchChange","event","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"kKAYeA,G,WAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,OCSCQ,EAbF,SAACC,GAAW,IACjBC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GACpB,OACC,sBAAKC,UAAU,wDAAf,UACC,qBAAKC,IAAI,SAASC,OAAO,QAAQC,MAAM,QAAQC,IAAG,+BAA0BL,EAA1B,eAClD,gCACA,6BAAKF,IACL,4BAAIC,W,4BCcQO,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACvC,OACC,cAAC,EAAD,CAEAX,GAAKO,EAAOI,GAAGX,GACfF,KAAOS,EAAOI,GAAGb,KACjBC,MAAQQ,EAAOI,GAAGZ,OAHZY,MASP,OACC,8BACGH,KCDUI,EAhBG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACpB,OAEE,aADA,CACA,OAAKZ,UAAU,MAAf,SACD,uBACAa,KAAK,SAELb,UAAU,mCACVc,YAAY,gBACZC,SAAUH,OCDGI,EARA,SAACpB,GACf,OACC,qBAAKqB,MAAO,CAACC,UAAW,SAAUC,OAAQ,iBAAkBjB,OAAQ,SAApE,SACGN,EAAMwB,YCmBIC,E,kDAnBd,WAAYzB,GAAQ,IAAD,8BAClB,cAAMA,IACD0B,MAAQ,CACZC,UAAU,GAHO,E,qDAOnB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG3B,WACC,OAAIG,KAAKJ,MAAMM,QACP,0DAEDF,KAAK9B,MAAMwB,a,GAhBQS,aC4DbC,E,kDA9Cb,aAAe,IAAD,8BACb,gBAkBHC,eAAiB,SAACC,GACjB,EAAKL,SAAS,CAAEM,YAAaD,EAAME,OAAOC,SAlBxC,EAAKb,MAAQ,CACZhB,OAAQ,GACR2B,YAAa,IAJD,E,qDAQhB,WAAqB,IAAD,OACnBG,MAAM,6CACL/C,MAAK,SAAAgD,GACL,OAAOA,EAASC,UAEfjD,MAAK,SAAAkD,GACP,EAAKZ,SAAS,CAAErB,OAAQiC,S,oBASzB,WAAU,IAAD,OACDC,EAAiBd,KAAKJ,MAAMhB,OAAOmC,QAAO,SAAAnC,GACjD,OAAOA,EAAOT,KAAK6C,cAAcC,SAAS,EAAKrB,MAAMW,YAAYS,kBAE/D,OAAiC,IAA7BhB,KAAKJ,MAAMhB,OAAOsC,OACd,yCAGT,sBAAK5C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWY,aAAcc,KAAKK,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACA,cAAC,EAAD,CAAUzB,OAASkC,e,GArCLX,a,MCLlBgB,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,SAKlD9D,K","file":"static/js/main.b28add61.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\n\r\nconst Card = (props) => {\r\nconst { name, email, id } = props;\t\r\n\treturn (\r\n\t\t<div className='  tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt='robots' height=\"300px\" width=\"300px\" src={`https://robohash.org/${id}?set=set3`} />\r\n\t\t\t<div>\r\n\t\t\t<h2>{name}</h2>\r\n\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\nconst cardComponent = robots.map((user, i) => {\r\n\treturn (\r\n\t\t<Card \r\n\t\tkey={ i } \r\n\t\tid={ robots[i].id } \r\n\t\tname={ robots[i].name } \r\n\t\temail={ robots[i].email }/>\r\n\t\t);\r\n\t})\r\n\t\t\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{ cardComponent }\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n\treturn (\r\n\t  //good practice to wraps returns in a div\r\n\t  <div className='pa2'>\r\n\t\t<input \r\n\t\ttype='search'\r\n\t\t//tachyons is being used for quick shorthand styling\r\n\t\tclassName=\"pa3 ba b--green bg-lightest-blue\"\r\n\t\tplaceholder='search robots'\r\n\t\tonChange={searchChange} //can use html attributes but needs to be camelCase\r\n\t\t />\r\n\t  </div>\r\n\t);\r\n}\r\n\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', border: '3px solid grey', height: '800px'}}>\r\n\t\t  {props.children}\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\n\r\n//Error boundary works in deployment build\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({ hasError: true })\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasErro) {\r\n\t\t\treturn <h1>Oooops. That is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\n//STATE\r\n//1. acts like a memory\r\n//2. an object that describes the application\r\n//3. state is able to change\r\n//4. when child component recieves it, can't be changed\r\n//5. this is called one way data flow\r\n//6. usually lives in parent component\r\n\r\n\r\n//the use of state requires class\r\n//constructor function that pulls \"Component\" Object from react\r\nclass App extends Component { //destructured, implies React.Component\r\n  constructor() {//lifecycle hook\r\n  \tsuper() //calls the constructor\r\n  \tthis.state = {\r\n  \t\trobots: [], \r\n  \t\tsearchfield: ''\r\n  \t}\r\n  }\r\n\r\ncomponentDidMount() {\r\n\tfetch('http://jsonplaceholder.typicode.com/users')\r\n\t.then(response=> {\r\n\t\treturn response.json();\r\n\t})\r\n\t .then(users => {\r\n\tthis.setState({ robots: users })\r\n\t});\r\n\t \r\n}\r\n\r\nonSearchChange = (event) => { //always use arrow function for method creation inside object\r\n\tthis.setState({ searchfield: event.target.value })\r\n}\r\n\r\nrender() {//lifecycle hook - every time state changes, render is run again\r\n  const filteredRobots = this.state.robots.filter(robots =>{\r\n\treturn robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t})\r\n  \tif (this.state.robots.length === 0) {\r\n  \t\treturn <h1>Loading</h1>\r\n  \t\t} else {\r\n\t\treturn (\r\n\t\t<div className=\"tc\">\r\n\t\t\t<h1 className=\"f1\">ROBOFRIENDS</h1>\r\n\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t<Scroll>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t<CardList robots={ filteredRobots }/>\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t</Scroll>\r\n\t\t</div>\r\n\t  );\r\n    }\r\n  }\r\n}\r\n\r\n//export\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './containers/App.css';\nimport reportWebVitals from './reportWebVitals';\nimport Card from './components/Card';\nimport App from './containers/App'; //usually main component name\nimport 'tachyons';\n\n\n\n\nReactDOM.render(<App />,  document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}